What happens when you initialize a repository? Why do you need to do it?
	when we initialize repo, .git file will be created. 
	We need to do git init to start commiting and tracking our previous history.


How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	staging area keep track of the files needed to be commit. It gives flexibiliy of committing selected files rather
	all files.

	directory contains all the current files.
	repository contains time stamp of all historical changes.

How can you use the staging area to make sure you have one commit per logical
change?
	
	stage only files which are one logical change, then commit the stage area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches help us to experiment with code. Also branches help in collobrating with others.

How do the diagrams help you visualize the branch structure?
	It really cleared the concept of creating new branch and also checking out commit might not be good idea if not creating
	branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	merging will combine two file into one. 

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	it helps merging non conflict commit